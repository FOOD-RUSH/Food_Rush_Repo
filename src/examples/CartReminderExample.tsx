// Example component showing how to handle cart reminders using effects\r\n// This replaces the old store-based reminder logic\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useCartReminders } from '../hooks/customer/useCartReminders';\r\nimport {\r\n  useCartItems,\r\n  useCartReminderEnabled,\r\n} from '../stores/customerStores/cartStore';\r\n\r\nexport const CartReminderExample: React.FC = () => {\r\n  const cartItems = useCartItems();\r\n  const reminderEnabled = useCartReminderEnabled();\r\n  const {\r\n    scheduleCartReminders,\r\n    cancelCartReminders,\r\n    enableReminders,\r\n    disableReminders,\r\n    toggleReminders,\r\n  } = useCartReminders();\r\n\r\n  // Handle cart changes with effects (replaces store logic)\r\n  useEffect(() => {\r\n    if (reminderEnabled) {\r\n      if (cartItems.length > 0) {\r\n        // Schedule reminders when cart has items\r\n        scheduleCartReminders();\r\n      } else {\r\n        // Cancel reminders when cart is empty\r\n        cancelCartReminders();\r\n      }\r\n    } else {\r\n      // Cancel reminders when disabled\r\n      cancelCartReminders();\r\n    }\r\n  }, [cartItems.length, reminderEnabled, scheduleCartReminders, cancelCartReminders]);\r\n\r\n  // Cleanup reminders on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      cancelCartReminders();\r\n    };\r\n  }, [cancelCartReminders]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Cart Reminder Management</h3>\r\n      <p>Cart Items: {cartItems.length}</p>\r\n      <p>Reminders Enabled: {reminderEnabled ? 'Yes' : 'No'}</p>\r\n      \r\n      <button onClick={toggleReminders}>\r\n        {reminderEnabled ? 'Disable' : 'Enable'} Reminders\r\n      </button>\r\n      \r\n      <button onClick={scheduleCartReminders}>\r\n        Schedule Reminders\r\n      </button>\r\n      \r\n      <button onClick={cancelCartReminders}>\r\n        Cancel Reminders\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartReminderExample;\r\n"